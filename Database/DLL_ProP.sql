//Create tables and contraints
CREATE TABLE CAMP
  (
    CampID      INTEGER NOT NULL,
    Description VARCHAR(20) ,
    MaxPerson   INTEGER NOT NULL ,
    Avaitalble  BLOB
  ) ; 
ALTER TABLE CAMP ADD CONSTRAINT CAMP_PK PRIMARY KEY ( CampID ) ;


CREATE TABLE CAMPING_RES
  (
    CampRes_No           INTEGER NOT NULL ,
    Start_Date           DATE NOT NULL ,
    End_Date             DATE NOT NULL ,
    E_ACCOUNT_Account_ID INTEGER NOT NULL ,
    CAMP_CampID          INTEGER NOT NULL ,
    E_Acount_ID          INTEGER NOT NULL
  ) ;
ALTER TABLE CAMPING_RES ADD CONSTRAINT CAMPING_RES_PK PRIMARY KEY ( CampRes_No ) ;


CREATE TABLE E_ACCOUNT
  (
    RFID_Code                   INTEGER NOT NULL ,
    Balance                     NUMBER (10,3) NOT NULL ,
    PARTICIPANTS_Participant_ID INTEGER NOT NULL ,
    "E-mail"                    VARCHAR2 (30) NOT NULL ,
    E_Acount_ID                 INTEGER NOT NULL ,
    First_Name                  VARCHAR2 (50) NOT NULL ,
    Last_Name                   VARCHAR2 (50) NOT NULL ,
    Email                       VARCHAR2 (50) NOT NULL ,
    Phone                       CHAR (20) ,
    Payment_Status BLOB NOT NULL ,
    Pay_InAdvance BLOB NOT NULL
  ) ;
  ALTER TABLE E_ACCOUNT ADD CONSTRAINT E_ACCOUNT_PK PRIMARY KEY ( E_Acount_ID ) ;

CREATE TABLE FOOD
  (
    Food_ID       INTEGER NOT NULL ,
    Food_Name     VARCHAR2 NOT NULL ,
    Food_Quantity INTEGER NOT NULL ,
    Food_Price    NUMBER (6,2) NOT NULL
  ) ;
ALTER TABLE FOOD ADD CONSTRAINT FOOD_PK PRIMARY KEY ( Food_ID ) ;

CREATE TABLE FOOD_INVOICE
  (
    Quantity_Sold            INTEGER NOT NULL ,
    F_INVOICE_Food_InvoiceID INTEGER NOT NULL ,
    FOOD_Food_ID             INTEGER NOT NULL
  ) ;
ALTER TABLE FOOD_INVOICE ADD CONSTRAINT FOOD_INVOICE_PK PRIMARY KEY ( F_INVOICE_Food_InvoiceID, FOOD_Food_ID ) ;

CREATE TABLE F_INVOICE
  (
    Food_InvoiceID       INTEGER NOT NULL ,
    E_ACCOUNT_Account_ID INTEGER NOT NULL ,
    SoldDate             DATE NOT NULL ,
    E_Acount_ID          INTEGER NOT NULL
  ) ;
ALTER TABLE F_INVOICE ADD CONSTRAINT F_INVOICE_PK PRIMARY KEY ( Food_InvoiceID ) ;

CREATE TABLE "GROUP"
  (
    GroupID                     INTEGER NOT NULL ,
    PARTICIPANTS_Participant_ID INTEGER NOT NULL ,
    "E-mail"                    VARCHAR2 (30) NOT NULL ,
    "Co-email"                  VARCHAR2 (20) NOT NULL ,
    CAMPING_RES_CampRes_No      INTEGER NOT NULL ,
    Check_in BLOB NOT NULL
  ) ;
ALTER TABLE "GROUP" ADD CONSTRAINT GROUP_PK PRIMARY KEY ( GroupID, "Co-email" ) ;


//Foreign keys
ALTER TABLE CAMPING_RES ADD CONSTRAINT CAMPING_RES_CAMP_FK FOREIGN KEY ( CAMP_CampID ) REFERENCES CAMP ( CampID ) ;

ALTER TABLE CAMPING_RES ADD CONSTRAINT CAMPING_RES_E_ACCOUNT_FK FOREIGN KEY ( E_Acount_ID ) REFERENCES E_ACCOUNT ( E_Acount_ID ) ;

ALTER TABLE E_ACCOUNT ADD CONSTRAINT E_ACCOUNT_PARTICIPANTS_FK FOREIGN KEY ( PARTICIPANTS_Participant_ID, "E-mail" ) REFERENCES PARTICIPANTS ( Participant_ID, "E-mail" ) ;

ALTER TABLE FOOD_INVOICE ADD CONSTRAINT FOOD_INVOICE_FOOD_FK FOREIGN KEY ( FOOD_Food_ID ) REFERENCES FOOD ( Food_ID ) ;

ALTER TABLE FOOD_INVOICE ADD CONSTRAINT FOOD_INVOICE_F_INVOICE_FK FOREIGN KEY ( F_INVOICE_Food_InvoiceID ) REFERENCES F_INVOICE ( Food_InvoiceID ) ;

ALTER TABLE F_INVOICE ADD CONSTRAINT F_INVOICE_E_ACCOUNT_FK FOREIGN KEY ( E_Acount_ID ) REFERENCES E_ACCOUNT ( E_Acount_ID ) ;

ALTER TABLE "GROUP" ADD CONSTRAINT GROUP_CAMPING_RES_FK FOREIGN KEY ( CAMPING_RES_CampRes_No ) REFERENCES CAMPING_RES ( CampRes_No ) ;

ALTER TABLE "GROUP" ADD CONSTRAINT GROUP_PARTICIPANTS_FK FOREIGN KEY ( PARTICIPANTS_Participant_ID, "E-mail" ) REFERENCES PARTICIPANTS ( Participant_ID, "E-mail" ) ;

ALTER TABLE MATERIAL_INVOICE ADD CONSTRAINT MATERIAL_INVOICE_MATERIAL_FK FOREIGN KEY ( MATERIAL_Material_ID ) REFERENCES MATERIAL ( Material_ID ) ;

ALTER TABLE MATERIAL_INVOICE ADD CONSTRAINT MATERIAL_INVOICE_M_INVOICE_FK FOREIGN KEY ( M_INVOICE_Material_InvoiceID ) REFERENCES M_INVOICE ( Material_InvoiceID ) ;

ALTER TABLE M_INVOICE ADD CONSTRAINT M_INVOICE_E_ACCOUNT_FK FOREIGN KEY ( E_Acount_ID ) REFERENCES E_ACCOUNT ( E_Acount_ID ) ;
