<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAM8SURBVGhD7VjBcdswEFQJKSElaEznHXWgdJB04HQQd2D/KPljdxB1oHTgvEnNKB1EHSS7hwMJ
        0KBIkLDMGXNndkwdiOMtgDsevZgxY8aMGe8Snx7Kz5Zqmj6W+fHj9bb8cb0p9+C/dhbP+Hu3fCiWOnUa
        YEAIrCP4NkJUXq7U1duBQWSb8m84yP68yotv6vLyWD4ePzRFZHn5B+JuKZDjemsF2q+25fdsU/x255Fv
        dtS4ijYICDpl28MXHeoF2U0Kr3wc7nXospCVr4X8VHMUGLz1AX+/1HxZuEKUTPi1Dp8FjxHFe/MnJETI
        vJEgWYobpB35cQzNm5yQwZyCEKz0jvQC6yAr16vnCM+w217wra1DFbwdwTVtUpJRvfg7y4snBmcpQmFn
        tbP+8HuVVAgcrbFCj63nt2LdXjAoax9aOt0SPkoIV687+DCxwv4bHckcegm2Ac/+6vkYKsRd0VRkYLqz
        N/ZY4jkre22Cb9n5IULovOmIZ1jOb0urQHtbe5GEQ4RIIqoDBhZK5nPgQkD4yfXh/u5NBO9eq/v+cB1w
        q9UcBQRev5m1apmcQ0mFf7ePMs+BULEXT7LzyCf8Hle1OMl9CNi7vdBz7p9xFRILCnd8JBEixKqxiuyb
        rQVsd2IPzCFlHlZX3feCfFGacm78pBSSgHvuWGvBQPC2cr2YO1oIrrGice0FznnsnE4mEPKivVB6rYWy
        Oj7yW33gnviKBXrzUgmJRaPhu+Vxoo2luLIHyGomO2oWLV3VwqrwbXyjQ52QsmkKQB1gYDEkmRmoMpQ3
        Mlb7SJPsRpD5ILIthSXG17TLeGOeYfEc02dZuP5wvVNzf4SEjCUXgmK7ugSncnnvIr4k9Zb+cIXwTCOI
        qGSVc34mF0SUee94bAZvyZzR0OLg7Yieb6dimY8h+xBtLZSS1OojTfccyK/ekKBGOnKFsFrFdMZmRw/3
        XcewE17pZKK2vInbABHev0opQodMVcO4fP1RrJL30D46eBcMvBZiiMD4rxr5INLbKjA42jnu9Udm3mlI
        xUoG73t5IEVE5G6+CrjV4KBSDBG7pMckBbiqkjddojDOsz45AeeguxVsLWbMmDFjxjvAYvEfzoqNSYiG
        U4IAAAAASUVORK5CYII=
</value>
  </data>
</root>